apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

Properties properties = new Properties()
File localPropertiesFile = project.rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    properties.load(localPropertiesFile.newDataInputStream())
}
File projectPropertiesFile = project.file("project.properties")
if (projectPropertiesFile.exists()) {
    properties.load(projectPropertiesFile.newDataInputStream())
}

def projectVersion = properties.getProperty('project.version')

//maven pom配置
def projectName = properties.getProperty('project.name')
def projectGroupId = properties.getProperty('project.groupId')
def projectArtifactId = properties.getProperty("project.artifactId")
def projectPackaging = properties.getProperty("project.packaging")
def projectDescription = properties.getProperty('project.description')
def projectSiteUrl = properties.getProperty('project.siteUrl')
def projectGitUrl = properties.getProperty('project.gitUrl')
def projectIssueTrackerUrl = properties.getProperty('project.issuesUrl')

//开发者信息
def developerId = properties.getProperty('developer.id')
def developerName = properties.getProperty('developer.name')
def developerEmail = properties.getProperty('developer.email')

//bintray 仓库配置
def bintrayRepo = properties.getProperty('bintray.repo')
def bintrayName = properties.getProperty('bintray.name')
def bintrayUser = properties.getProperty('bintray.user')
def bintrayApiKey = properties.getProperty("bintray.apikey")

version = projectVersion
group = projectGroupId

//配置maven库，生成pom.xml文件
install {
    repositories.mavenInstaller {
        pom {
            project {
                name projectName
                groupId projectGroupId
                artifactId projectArtifactId
                packaging projectPackaging
                description projectDescription //项目描述
                url projectSiteUrl
                licenses {
                    license {
                        name 'Apache-2.0'
                        url ' http://www.apache.org/licenses/LICENSE-2.0' // 填写开源协议
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection projectGitUrl
                    developerConnection projectGitUrl
                    url projectSiteUrl
                }
            }
        }
    }
}

//打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
//打包源码doc文档
task javadoc(type: Javadoc) {
    options.encoding = "UTF-8"
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/8/docs/api"
    }
}
//bintray上传配置
bintray {
    //bintray网站的用户名
    user = bintrayUser
    //bintray网站分配给你的key，
    key = bintrayApiKey
    configurations = ['archives']
    //这个必须设置为true，默认为false，只有这样才能发布,(写在外面,不要写在publish里面)
    publish = true
    //是否覆盖已经发布的版本工件
    override = false
    pkg {
        //bintray仓库名字
        repo = bintrayRepo
        //bintray项目名
        name = bintrayName
        //bintray项目的描述
        desc = projectDescription
        websiteUrl = projectSiteUrl
        issueTrackerUrl = projectIssueTrackerUrl
        vcsUrl = projectGitUrl
        licenses = ['Apache-2.0']
        publicDownloadNumbers = true

//        version {
//            // gpg的配置是在为jcenter自动上传到mavenCenter做准备 ， 没有本签名配置无法将包同步到mavenCenter,因为只有经过签名的包才允许上传到maveCenter.
//            gpg {
//                sign = true
//                passphrase = properties.getProperty("bintray.gpg.password")
//            }
//        }


    }
}